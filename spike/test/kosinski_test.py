import unittest
import array
import spike.kosinski

class KosinskiTest(unittest.TestCase):
    def testByteReverse(self):
        # 11110000 -> 00001111
        self.assertEquals(0x0F, spike.kosinski.reverse(0xF0))
        # 10101010 -> 01010101
        self.assertEquals(0x55, spike.kosinski.reverse(0xAA))

    def testAllUncompressed(self):
        self.assertEquals(
            [0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f],
            spike.kosinski.decompress_block(array.array('B',[0xff, 0xff, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f])).tolist())

    def testSimpleInlineRLE(self):
        self.assertEquals(
            [0x25, 0x25, 0x25, 0x25, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B],
            spike.kosinski.decompress_block(array.array('B',[0xF1, 0xFF, 0x25, 0xFF, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B])).tolist())
